apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    appVersion: {{ .Values.appVersion }}
    component: {{ .Values.metadata.labels.component }}
    environment: {{ .Values.metadata.labels.environment }}
    owner: {{ .Values.metadata.labels.owner }}
    state: {{ .Values.metadata.labels.state }}
    tier: {{ .Values.metadata.labels.tier }}
    supportemail: {{ .Values.metadata.labels.supportemail }}
    projectalias: {{ .Values.metadata.labels.projectalias }}
    byolsoftware: {{ .Values.metadata.labels.byolsoftware }}
    businessunit: {{ .Values.metadata.labels.businessunit }}
    application: {{ .Values.metadata.labels.application }}
    compliancedomain: {{ .Values.metadata.labels.compliancedomain }}
    region: {{ .Values.metadata.labels.region }}
    os_support_owner: {{ .Values.metadata.labels.os_support_owner }}
    application_support_owner: {{ .Values.metadata.labels.application_support_owner }}
    business_service: {{ .Values.metadata.labels.business_service }}
    alliance: {{ .Values.metadata.labels.alliance }}
    provisionedby: {{ .Values.metadata.labels.provisionedby }}
    version: {{ .Values.metadata.labels.version }}
    name: {{ .Values.metadata.labels.name }}
    data_class: {{ .Values.metadata.labels.data_class }}
    division: "{{ .Values.metadata.labels.division }}"
    cost_center: "{{ .Values.metadata.labels.cost_center }}"
    cmdb_bus_svc_id: {{ .Values.metadata.labels.cmdb_bus_svc_id }}
  {{- if .Values.datadog.enabled }}
    admission.datadoghq.com/config-mode: service
    admission.datadoghq.com/enabled: "true"
    tags.datadoghq.com/env: {{ .Values.datadog.env }}
    tags.datadoghq.com/service: {{ .Values.datadog.service }}
    tags.datadoghq.com/version: {{ .Values.appVersion }}
    tags.datadoghq.com/alliance: {{ .Values.datadog.alliance }}
    tags.datadoghq.com/application_support_owner: {{ .Values.datadog.support_owner }}
    tags.datadoghq.com/business_application: {{ .Values.datadog.bus_bap_id }}
    tags.datadoghq.com/business_application_name: {{ .Values.datadog.bus_application_name }}
    tags.datadoghq.com/business_service: {{ .Values.datadog.bus_svc_id }}
    tags.datadoghq.com/business_service_name: {{ .Values.datadog.bus_service_name }}
    tags.datadoghq.com/os_support_owner: {{ .Values.datadog.support_owner }}
    tags.datadoghq.com/page_out: "{{ .Values.datadog.page_out }}"
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- if ne .Values.metadata.labels.environment "ci" }}
      role: {{ .Values.deployment.podRole }}
      {{- end }}
      app: {{ .Values.name }}
  strategy:
    type: Recreate
  replicas: {{ .Values.deployment.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        appVersion: {{ .Values.appVersion }}
        {{- if ne .Values.metadata.labels.environment "ci" }}
        role: {{ .Values.deployment.podRole }}
        mode: {{ .Values.primaryModeLabel }}
        {{- end }}
      {{- if .Values.datadog.enabled }}
        admission.datadoghq.com/config-mode: service
        admission.datadoghq.com/enabled: "true"
        tags.datadoghq.com/env: {{ .Values.datadog.env }}
        tags.datadoghq.com/service: {{ .Values.datadog.service }}
        tags.datadoghq.com/version: {{ .Values.appVersion }}
        tags.datadoghq.com/alliance: {{ .Values.datadog.alliance }}
        tags.datadoghq.com/application_support_owner: {{ .Values.datadog.support_owner }}
        tags.datadoghq.com/business_application: {{ .Values.datadog.bus_bap_id }}
        tags.datadoghq.com/business_application_name: {{ .Values.datadog.bus_application_name }}
        tags.datadoghq.com/business_service: {{ .Values.datadog.bus_svc_id }}
        tags.datadoghq.com/business_service_name: {{ .Values.datadog.bus_service_name }}
      {{- end }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        prometheus.io/port: '9191'
        prometheus.io/scrape: "true"
        {{- if or (.Values.deployment.replicanoissue) (eq (.Values.deployment.replicanoissue | toString) "<nil>") }}
        traffic.sidecar.istio.io/excludeInboundPorts: "8197,18197"
        traffic.sidecar.istio.io/excludeOutboundPorts: "8197,18197"
        {{- end }}
        {{- if .Values.datadog.enabled }}
        admission.datadoghq.com/java-lib.custom-image: "gcr.io/iaas-gcr-reg-prd-ad3d/golden/datadog-lib-java-init:latest"
        {{- end }}
    spec:
      hostname: rules-editor-ui
      serviceAccountName: {{ .Values.service.env.serviceAccountName }}
      automountServiceAccountToken: true
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      initContainers:
        {{- if .Values.volumePermissions.enabled }}
        - name: volume-permissions
          image: {{ .Values.imageSha }}
          imagePullPolicy: {{ .Values.deployment.imagepullpolicy }}
          command:
            - /bin/sh
            - -c
            - chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }} /var/opt/sl/data
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: {{ .Values.deployment.volumes.name }}
              mountPath: "/var/opt/sl/data"
        {{- end }}
      {{- if .Values.deployment.nodeAffinity.enabled }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
                - key: topology.kubernetes.io/zone
                  operator: In
                  values:
                    - {{ .Values.deployment.nodeAffinity.availabilityZone }}
      {{- end }}
      {{- if or (.Values.deployment.nodepool) (eq (.Values.deployment.nodepool | toString) "<nil>") }}
      tolerations:
        - key: application
          operator: Equal
          value: smarts
          effect: NoSchedule
      {{- end }}
      containers:
        - name: {{ .Values.name }}
          image: {{ .Values.imageSha }}
          imagePullPolicy: {{ .Values.deployment.imagepullpolicy }}
          {{- if .Values.securityContext.enabled }}
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser }}
            runAsGroup: {{ .Values.securityContext.runAsUser }}
          {{- end }}
          env:
            - name: SL_INSTANCE_TYPE
              value: {{ .Values.deployment.containers.env.instanceType }}
            - name: SL_INIT
              value: {{ .Values.deployment.containers.env.init }}
            - name: SL_METRICS_ENABLED
              value: "true"
            - name: SL_METRICS_DECISION_EVALUATION
              value: "true"
            - name: SL_METRICS_DEPLOYMENT_MANAGER
              value: "true"
            - name: SL_METRICS_DECISION_METRICS
              value: "true"
            - name: SL_ENCRYPTION_ALGORITHM
              value: "AES"
            - name: SL_ENCRYPTION_KEY_SIZE
              value: "256"
            {{- if .Values.deployment.containers.env.disableWebsockets }}
            - name: SL_DISABLE_SSE
              value: "true"
            - name: SL_DISABLE_WEBSOCKETS
              value: "true"
            {{- end }}
            {{- if .Values.deployment.containers.env.contentSecurityPolicy }}
            - name: SL_CONTENT_SECURITY_POLICY
              value: {{ quote .Values.deployment.containers.env.contentSecurityPolicy }}
            {{- end }}
            - name: SMARTS_PRIMARY_HOST
              value: "{{ .Values.deployment.containers.env.primaryHost }}"
            - name: SMARTS_REPLICA_HOST
              value: "{{ .Values.deployment.containers.env.replicaHost }}"
            - name: RAVEN_Security_DoNotConsiderMemoryLockFailureAsCatastrophicError
              value: "true"
            - name: DD_APPSEC_ENABLED
              value: "{{ .Values.deployment.containers.env.DD_APPSEC_ENABLED }}"
            - name: DD_PROFILING_ENABLED
              value: "{{ .Values.deployment.containers.env.DD_PROFILING_ENABLED }}"
            - name: DD_PROFILING_ALLOCATION_ENABLED
              value: "{{ .Values.deployment.containers.env.DD_PROFILING_ALLOCATION_ENABLED }}"
            - name: DD_PROFILING_DDPROF_ENABLED
              value: "{{ .Values.deployment.containers.env.DD_PROFILING_DDPROF_ENABLED }}"
            - name: DD_PROFILING_ALLOCATION_LIMIT
              value: "{{ .Values.deployment.containers.env.DD_PROFILING_ALLOCATION_LIMIT }}"
          volumeMounts:
            - name: {{ .Values.deployment.volumes.name }}
              mountPath: /var/opt/sl/data
          readinessProbe:
            httpGet:
              path: /v1/monitor/liveness
              port: 8081
            periodSeconds: 10
            initialDelaySeconds: 20
            timeoutSeconds: 2
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /v1/monitor/liveness
              port: 8081
            periodSeconds: 10
            initialDelaySeconds: 20
            timeoutSeconds: 2
            failureThreshold: 5
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8081
              name: mgmt
              protocol: TCP
          {{- if .Values.deployment.containers.env.enableIstioPrometheus }}
          volumeMounts:
            - name: metrics-volume
              mountPath: /etc/metrics
          {{- end }}
          resources:
            {{- if .Values.deployment.containers.resources.requests }}
            requests:
              {{- toYaml .Values.deployment.containers.resources.requests | nindent 12 }}
            {{- end }}
            {{- if .Values.deployment.containers.resources.limits }}
            limits:
              {{- toYaml .Values.deployment.containers.resources.limits | nindent 12 }}
            {{- end }}
        {{- if .Values.bluepen.enabled }}
        - name: bluepen
          image: {{ .Values.bluepen.sidecar.image.repository }}:{{ .Values.bluepen.sidecar.image.tag }}
          resources:
            requests:
              memory: {{ .Values.bluepen.sidecar.resources.requests.memory }}
              cpu: {{ .Values.bluepen.sidecar.resources.requests.cpu }}
            limits:
              memory: {{ .Values.bluepen.sidecar.resources.limits.memory }}
              cpu: {{ .Values.bluepen.sidecar.resources.limits.cpu }}
          volumeMounts:
            - name: {{ .Values.deployment.volumes.name }}
              mountPath: "/var/opt/sl/data"
        {{- end }}
      volumes:
        - name: {{ .Values.deployment.volumes.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.deployment.volumes.claimName }}
